// accountant-agent.js
console.log("üí∞ Accountant Agent –∑–∞–≥—Ä—É–∂–µ–Ω");

export const AccountantAgent = {
  name: "Accountant",
  description: "–í–µ–¥—ë—Ç —Ñ–∏–Ω–∞–Ω—Å—ã –ø—Ä–æ–µ–∫—Ç–∞: —Ä–∞—Å—Ö–æ–¥—ã, –¥–æ—Ö–æ–¥—ã, –æ—Ç—á—ë—Ç—ã, –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å.",
  version: "1.0.0",

  finances: {
    income: 0,
    expenses: 0
  },

  commands: {
    "/balance": () => {
      const { income, expenses } = AccountantAgent.finances;
      const profit = income - expenses;
      return `üìä –ë–∞–ª–∞–Ω—Å:\n–î–æ—Ö–æ–¥: ${income} ‚Ç¨\n–†–∞—Å—Ö–æ–¥—ã: ${expenses} ‚Ç¨\n–ò—Ç–æ–≥–æ: ${profit} ‚Ç¨`;
    },

    "/addincome": (amount) => {
      const value = parseFloat(amount);
      if (isNaN(value)) return "‚ùó –£–∫–∞–∂–∏ —Å—É–º–º—É: /addincome 1000";
      AccountantAgent.finances.income += value;
      return `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –¥–æ—Ö–æ–¥: ${value} ‚Ç¨`;
    },

    "/addexpense": (amount) => {
      const value = parseFloat(amount);
      if (isNaN(value)) return "‚ùó –£–∫–∞–∂–∏ —Å—É–º–º—É: /addexpense 500";
      AccountantAgent.finances.expenses += value;
      return `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ä–∞—Å—Ö–æ–¥—ã: ${value} ‚Ç¨`;
    },

    "/resetfinance": () => {
      AccountantAgent.finances = { income: 0, expenses: 0 };
      return "üîÑ –§–∏–Ω–∞–Ω—Å—ã —Å–±—Ä–æ—à–µ–Ω—ã.";
    },

    "/help": () =>
      "üí∞ –ö–æ–º–∞–Ω–¥—ã:\n" +
      "‚Ä¢ /balance ‚Äî —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å\n" +
      "‚Ä¢ /addincome [—Å—É–º–º–∞] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥\n" +
      "‚Ä¢ /addexpense [—Å—É–º–º–∞] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥\n" +
      "‚Ä¢ /resetfinance ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å—ã\n" +
      "‚Ä¢ /help ‚Äî –ø–æ–º–æ—â—å"
  },

  handleCommand: function (input) {
    const [base, ...args] = input.trim().split(" ");
    const fn = this.commands[base];
    return fn ? fn(...args) : "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏ /help";
  }
};