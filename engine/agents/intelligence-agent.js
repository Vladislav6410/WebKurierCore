// intelligence-agent.js
console.log("üß† Intelligence Agent –∑–∞–≥—Ä—É–∂–µ–Ω");

export const IntelligenceAgent = {
  name: "Intelligence",
  description: "–£–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–∫–æ–π –∞–≥–µ–Ω—Ç–æ–≤, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–µ—à–µ–Ω–∏—è.",
  version: "1.0.0",

  state: {
    activeAgents: [],
    lastCommand: null,
    context: {},
  },

  commands: {
    "/status": () => {
      const count = IntelligenceAgent.state.activeAgents.length;
      return `üß† –ê–≥–µ–Ω—Ç –∞–∫—Ç–∏–≤–µ–Ω. –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∞–≥–µ–Ω—Ç–æ–≤: ${count}`;
    },

    "/remember": () => {
      const ctx = JSON.stringify(IntelligenceAgent.state.context, null, 2);
      return ctx === "{}" ? "üóÇ –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—É—Å—Ç." : `üìå –ü–∞–º—è—Ç—å:\n${ctx}`;
    },

    "/addctx": (key, value) => {
      if (!key || !value) return "‚ùó –£–∫–∞–∂–∏ –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ: /addctx –∫–ª—é—á –∑–Ω–∞—á–µ–Ω–∏–µ";
      IntelligenceAgent.state.context[key] = value;
      return `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø–∞–º—è—Ç—å: ${key} = ${value}`;
    },

    "/plan": () => {
      return "üìã –ü–ª–∞–Ω: 1) –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–æ–Ω—ã. 2) –ê–Ω–∞–ª–∏–∑. 3) –†–µ—à–µ–Ω–∏–µ. 4) –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.";
    },

    "/help": () =>
      "üß† –ö–æ–º–∞–Ω–¥—ã:\n" +
      "‚Ä¢ /status ‚Äî —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞\n" +
      "‚Ä¢ /remember ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø–∞–º—è—Ç—å\n" +
      "‚Ä¢ /addctx –∫–ª—é—á –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç\n" +
      "‚Ä¢ /plan ‚Äî —Ç–µ–∫—É—â–∏–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π\n" +
      "‚Ä¢ /help ‚Äî —Å–ø—Ä–∞–≤–∫–∞"
  },

  handleCommand: function (input) {
    const parts = input.trim().split(" ");
    const base = parts[0];
    const args = parts.slice(1);
    const fn = this.commands[base];
    return fn ? fn(...args) : "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏ /help";
  },

  linkAgent: function (agentName) {
    if (!this.state.activeAgents.includes(agentName)) {
      this.state.activeAgents.push(agentName);
    }
  },

  resetContext: function () {
    this.state.context = {};
  }
};