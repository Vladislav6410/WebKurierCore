console.log("ü§ñ Master Agent –∑–∞–≥—Ä—É–∂–µ–Ω");

const agents = {
  accountant: 'accountant-agent.js',
  autopilot: 'autopilot-agent.js',
  designer: 'designer-agent.js',
  drone: 'drone-agent.js',
  engineer: 'engineer-agent.js',
  identity: 'identity-agent.js',
  intelligence: 'intelligence-agent.js',
  marketing: 'marketing-agent.js',
  programmer: 'programmer-agent.js',
  translator: 'translator/index.js',
};

function handleMasterCommand(command) {
  const parts = command.trim().split(/\s+/);
  const cmd = parts[0];
  const agentName = parts[1];

  switch (cmd) {
    case "/start":
      return startAgent(agentName);
    case "/stop":
      return stopAgent(agentName);
    case "/list":
      return listAgents();
    case "/status":
      return getAgentStatus(agentName);
    case "/train":
      return trainAgent(agentName);
    case "/config":
      return `‚öôÔ∏è –û—Ç–∫—Ä—ã—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è ${agentName}`;
    default:
      return "ü§ñ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ master-–∞–≥–µ–Ω—Ç–∞.";
  }
}

function startAgent(name) {
  if (!agents[name]) return "‚ùå –ê–≥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω";
  return `‚úÖ –ê–≥–µ–Ω—Ç ${name} –∑–∞–ø—É—â–µ–Ω (–º–æ–¥—É–ª—å: ${agents[name]})`;
}

function stopAgent(name) {
  return `‚õî –ê–≥–µ–Ω—Ç ${name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`;
}

function listAgents() {
  return "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã:\n" + Object.keys(agents).join("\n");
}

function getAgentStatus(name) {
  return `üì° –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞ ${name}: –∞–∫—Ç–∏–≤–µ–Ω ‚úÖ`;
}

function trainAgent(name) {
  return `üìö –û–±—É—á–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ ${name} –∑–∞–ø—É—â–µ–Ω–æ...`;
}