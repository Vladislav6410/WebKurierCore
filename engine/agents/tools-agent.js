// === tools-agent.js ===
// –ê–≥–µ–Ω—Ç –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤

export function showToolsPanel() {
  const panel = document.getElementById("tools-panel");
  if (panel) {
    panel.style.display = panel.style.display === "none" ? "block" : "none";
  }
}

// üì§ –ó–∞–≥—Ä—É–∑–∫–∞ HTML
export function loadHTMLFile(event) {
  const file = event.target.files[0];
  if (file && file.type === "text/html") {
    const reader = new FileReader();
    reader.onload = (e) => {
      document.getElementById("html-preview").value = e.target.result;
    };
    reader.readAsText(file);
  }
}

// üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ HTML
export function saveHTMLContent() {
  const content = document.getElementById("html-preview").value;
  const blob = new Blob([content], { type: "text/html" });
  const a = document.createElement("a");
  a.href = URL.createObjectURL(blob);
  a.download = "exported.html";
  a.click();
}

// üß† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
export function generateFromDescription() {
  const desc = document.getElementById("gen-description").value.trim().toLowerCase();
  let html = '';

  if (desc.includes("–∫–Ω–æ–ø–∫–∞")) {
    const label = desc.split("–Ω–∞–¥–ø–∏—Å—å—é ")[1] || "–ö–Ω–æ–ø–∫–∞";
    html = `<button>${label}</button>`;
  } else if (desc.includes("–∑–∞–≥–æ–ª–æ–≤–æ–∫")) {
    html = `<h1>–ó–∞–≥–æ–ª–æ–≤–æ–∫</h1>`;
  } else if (desc.includes("—Å–ø–∏—Å–æ–∫")) {
    html = `<ul><li>–ü—É–Ω–∫—Ç 1</li><li>–ü—É–Ω–∫—Ç 2</li></ul>`;
  } else {
    html = "<!-- –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ -->";
  }

  document.getElementById("html-preview").value += '\n' + html;
}

// üì¶ –≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–µ–∫—Ç–∞ –≤ ZIP
export async function exportZip() {
  const zip = new JSZip();
  const content = document.getElementById("html-preview").value;
  zip.file("index.html", content);

  const blob = await zip.generateAsync({ type: "blob" });
  const a = document.createElement("a");
  a.href = URL.createObjectURL(blob);
  a.download = "project.zip";
  a.click();
}