import config from "./wallet-config.json" assert { type: "json" };// === wallet-agent.js ‚Äî WebCoin –ö–æ—à–µ–ª—ë–∫ (–º–æ–¥—É–ª—å) ===

// === ‚ë† –ë–∞–ª–∞–Ω—Å ===
const WALLET_KEY = "webcoin_balance";

export function getBalance() {
  return parseInt(localStorage.getItem(WALLET_KEY) || "0", 10);
}

export function setBalance(amount) {
  localStorage.setItem(WALLET_KEY, amount);
  updateBalanceUI();
}

export function addCoins(amount) {
  setBalance(getBalance() + amount);
}

export function resetCoins() {
  setBalance(0);
}

export function updateBalanceUI() {
  const amount = getBalance();
  ["balance", "webcoin-balance", "balance-display"].forEach(id => {
    const el = document.getElementById(id);
    if (el) el.textContent = id === "balance" ? amount : `–ë–∞–ª–∞–Ω—Å: ${amount} WKC`;
  });
}

// === ‚ë° –ö–æ–º–∞–Ω–¥—ã WALLET ===
const walletCommands = {
  "/add": {
    description: "/add [—á–∏—Å–ª–æ] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–µ—Ç—ã",
    exec: args => {
      const amount = parseInt(args[0] || "10", 10);
      if (isNaN(amount) || amount <= 0) throw "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.";
      addCoins(amount);
      return `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} WKC.`;
    }
  },
  "/reset": {
    description: "/reset ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å",
    exec: () => {
      resetCoins();
      return "üîÅ –ë–∞–ª–∞–Ω—Å —Å–±—Ä–æ—à–µ–Ω.";
    }
  },
  "/balance": {
    description: "/balance ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å",
    exec: () => `üí∞ –ë–∞–ª–∞–Ω—Å: ${getBalance()} WKC.`
  },
  "/set": {
    description: "/set [—á–∏—Å–ª–æ] ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å",
    exec: args => {
      const amount = parseInt(args[0], 10);
      if (isNaN(amount) || amount < 0) throw "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.";
      setBalance(amount);
      return `üîß –ë–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${amount} WKC.`;
    }
  },
  "/export": {
    description: "/export ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ —Ñ–∞–π–ª",
    exec: () => {
      const data = JSON.stringify({ balance: getBalance() });
      const blob = new Blob([data], { type: "application/json" });
      const a = Object.assign(document.createElement("a"), {
        href: URL.createObjectURL(blob),
        download: "wallet.json"
      });
      a.click();
      return "üíæ –ë–∞–ª–∞–Ω—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω.";
    }
  },
  "/import": {
    description: "/import ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏–∑ —Ñ–∞–π–ª–∞",
    exec: (args, printToTerminal) => {
      const input = document.createElement("input");
      input.type = "file";
      input.accept = ".json";
      input.onchange = e => {
        const file = e.target.files[0];
        if (!file) return;
        new FileReader().addEventListener("load", ev => {
          try {
            const data = JSON.parse(ev.target.result);
            if (typeof data.balance === "number") {
              setBalance(data.balance);
              printToTerminal(`üì• –ë–∞–ª–∞–Ω—Å –∑–∞–≥—Ä—É–∂–µ–Ω: ${data.balance} WKC`);
            } else throw "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.";
          } catch (e) {
            printToTerminal(`‚ö†Ô∏è –û—à–∏–±–∫–∞: ${e}`, true);
          }
        });
        new FileReader().readAsText(file);
      };
      input.click();
      return "üìÇ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª.";
    }
  }
};

// === ‚ë¢ –ö–æ–º–∞–Ω–¥—ã ENGINEER (–æ–±—ë—Ä—Ç–∫–∏ –Ω–∞–¥ /engine/engineer.js) ===
const engineerCommands = {
  "/add-note": {
    description: "/add-note [—Ç–µ–∫—Å—Ç] ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É",
    exec: (args, _, handleEngineerCommand) => handleEngineerCommand("/add " + args.join(" "))
  },
  "/save": {
    description: "/save ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫–∏ –≤ Dropbox",
    exec: (_, __, handleEngineerCommand) => handleEngineerCommand("/save")
  },
  "/load": {
    description: "/load ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–º–µ—Ç–∫–∏",
    exec: (_, __, handleEngineerCommand) => handleEngineerCommand("/load")
  },
  "/config": {
    description: "/config ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥",
    exec: (_, __, handleEngineerCommand) => handleEngineerCommand("/config")
  },
  "/clear": {
    description: "/clear ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å",
    exec: (_, __, handleEngineerCommand) => handleEngineerCommand("/clear")
  }
};

// === ‚ë£ –ö–æ–º–∞–Ω–¥—ã DREAMMAKER (–æ–∂–∏–≤–ª–µ–Ω–∏–µ, –æ–∑–≤—É—á–∫–∞, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è) ===
const dreamCommands = {
  "/dream-status": {
    description: "/dream-status ‚Äî —Å—Ç–∞—Ç—É—Å DreamMaker",
    exec: () => window.dreammaker?.status() || "‚ùå DreamMaker –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω."
  },
  "/dream-video": {
    description: "/dream-video [–∏–º—è_—Ñ–∞–π–ª–∞] ‚Äî 3D –∏–∑ –≤–∏–¥–µ–æ",
    exec: ([name]) => window.dreammaker?.fromVideo({ name }) || "‚ùå –ù–µ—Ç DreamMaker."
  },
  "/dream-photo": {
    description: "/dream-photo [—Ñ–æ—Ç–æ] [–∞—É–¥–∏–æ] ‚Äî –æ–∂–∏–≤–∏—Ç—å —Ñ–æ—Ç–æ",
    exec: ([p, a]) => window.dreammaker?.animate({ name: p }, { name: a }) || "‚ùå –ù–µ—Ç DreamMaker."
  },
  "/dream-voice": {
    description: "/dream-voice [—Ç–µ–∫—Å—Ç] ‚Äî –æ–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç",
    exec: ([...txt]) => window.dreammaker?.voiceOver(txt.join(" ")) || "‚ùå –ù–µ—Ç DreamMaker."
  }
};

// === ‚ë§ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤–º–µ—Å—Ç–µ ===
export const walletAgentCommands = {
  ...walletCommands,
  ...engineerCommands,
  ...dreamCommands,
  "/help": {
    description: "/help ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥",
    exec: () =>
      Object.entries(walletAgentCommands)
        .map(([c, o]) => `${c}: ${o.description}`)
        .join("\n")
  }
};

// === ‚ë• –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
export async function handleWalletCommand(command, printToTerminal, handleEngineerCommand) {
  const [cmd, ...args] = command.trim().split(/\s+/);
  const entry = walletAgentCommands[cmd];
  if (!entry) return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π /help.";

  try {
    const res = await entry.exec(args, printToTerminal, handleEngineerCommand);
    return res;
  } catch (e) {
    return `‚ö†Ô∏è ${e}`;
  }
}