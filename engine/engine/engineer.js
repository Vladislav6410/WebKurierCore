import config from './config.json' assert { type: 'json' };
import memory from './memory.json' assert { type: 'json' };
import { DropboxManager } from './dropbox.js'; // —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Dropbox

export const Engineer = {
  handleCommand(command) {
    const [cmd, ...args] = command.trim().split(/\s+/);

    switch (cmd) {
      case "/create":
        return `üìÅ –°–æ–∑–¥–∞–Ω–æ: ${args.join(" ")}`;

      case "/rename":
        return `‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ: ${args[0]} ‚Üí ${args[1]}`;

      case "/scan":
        return "üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.";

      case "/task":
        return "üìÑ HTML-–∫–æ–¥: <button>–ö–Ω–æ–ø–∫–∞</button>";

      case "/assistant":
        return `ü§ñ –°–æ–∑–¥–∞–Ω –ø–æ–º–æ—â–Ω–∏–∫: ${args.join(" ")}`;

      case "/add": {
        const newCmd = args[0];
        const response = args.slice(1).join(" ");
        if (!memory.commands) memory.commands = {};
        memory.commands[newCmd] = response;

        // üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Dropbox
        DropboxManager.saveFile("memory.json", JSON.stringify(memory, null, 2));
        return `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ ${newCmd}`;
      }

      case "/help":
        return `üß† –ö–æ–º–∞–Ω–¥—ã:
  /create folder –ò–º—è
  /rename —Å—Ç–∞—Ä–æ–µ –Ω–æ–≤–æ–µ
  /scan ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞
  /task html ‚Äî –ø—Ä–∏–º–µ—Ä HTML
  /assistant –∏–Ω–∂–µ–Ω–µ—Ä
  /add /–∏–º—è –¢–µ–∫—Å—Ç ‚Äî –Ω–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
  /help ‚Äî –ø–æ–º–æ—â—å`;

      default:
        if (memory.commands && memory.commands[cmd]) {
          return memory.commands[cmd];
        }
        return `‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${cmd}`;
    }
  }
};