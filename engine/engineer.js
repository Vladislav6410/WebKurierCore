// === WebKurier Engineer v1.0 ===
// –§–∞–π–ª: /engine/engineer.js

console.log("üîß Engineer.js –∑–∞–≥—Ä—É–∂–µ–Ω");

async function handleEngineerCommand(command) {
  const parts = command.trim().split(/\s+/);
  const cmd = parts[0];
  const arg = parts[1];

  switch (cmd) {
    case "/help":
      return "üìò –ö–æ–º–∞–Ω–¥—ã:\n/save, /load, /add [–∫–ª—é—á], /config, /clear";

    case "/save":
      return saveMemory();

    case "/load":
      return loadMemory();

    case "/add":
      if (!arg) return "‚ùó –£–∫–∞–∂–∏ –∫–ª—é—á –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.";
      return addMemoryEntry(arg);

    case "/config":
      return loadConfig();

    case "/clear":
      localStorage.clear();
      return "üßπ –ü–∞–º—è—Ç—å –∏ –∫–æ–Ω—Ñ–∏–≥ –æ—á–∏—â–µ–Ω—ã.";

    default:
      return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏ /help";
  }
}

// === –†–∞–±–æ—Ç–∞ —Å –ø–∞–º—è—Ç—å—é ===
async function saveMemory() {
  const data = {
    updated: new Date().toISOString(),
    notes: localStorage.getItem("engine_notes") || ""
  };
  localStorage.setItem("memory_data", JSON.stringify(data));
  return "üíæ –ü–∞–º—è—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.";
}

async function loadMemory() {
  const data = JSON.parse(localStorage.getItem("memory_data") || "{}");
  return data.notes
    ? `üìÇ –ü–∞–º—è—Ç—å: ${data.notes}`
    : "üìÇ –ü–∞–º—è—Ç—å –ø—É—Å—Ç–∞.";
}

function addMemoryEntry(note) {
  const current = localStorage.getItem("engine_notes") || "";
  const updated = current + "\n" + note;
  localStorage.setItem("engine_notes", updated);
  return "‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞.";
}

// === –†–∞–±–æ—Ç–∞ —Å config.json ===
async function loadConfig() {
  try {
    const res = await fetch("engine/config.json");
    const cfg = await res.json();
    return `‚öôÔ∏è Config:\n` + JSON.stringify(cfg, null, 2);
  } catch (e) {
    return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ config.json";
  }
}