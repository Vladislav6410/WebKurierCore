// === i18n/i18n.js ===

const translations = {
  ru: {
    title: "üåê WebKurierCore",
    subtitle: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å WebKurier: —Ç–µ—Ä–º–∏–Ω–∞–ª, –∫–æ—à–µ–ª—ë–∫, Telegram-—Å–≤—è–∑—å.",
    wallet: "üí∞ WebCoin-–∫–æ—à–µ–ª—ë–∫",
    balance: "–ë–∞–ª–∞–Ω—Å",
    add: "+10 WKC",
    reset: "–°–±—Ä–æ—Å",
    terminal: "‚èé –ü—É—Å–∫",
    files: "üìÅ –§–∞–π–ª—ã",
    tools: "üõ† –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
    copy: "üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å",
    telegram: "üîó Telegram",
    say: "–°–∫–∞–∂–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏‚Ä¶"
  },
  en: {
    title: "üåê WebKurierCore",
    subtitle: "Welcome to the WebKurier autonomous interface: terminal, wallet, Telegram connection.",
    wallet: "üí∞ WebCoin Wallet",
    balance: "Balance",
    add: "+10 WKC",
    reset: "Reset",
    terminal: "‚èé Run",
    files: "üìÅ Files",
    tools: "üõ† Tools",
    copy: "üìã Copy",
    telegram: "üîó Telegram",
    say: "Speak or type‚Ä¶"
  },
  de: {
    title: "üåê WebKurierCore",
    subtitle: "Willkommen im autonomen WebKurier-Interface: Terminal, Wallet, Telegram-Verbindung.",
    wallet: "üí∞ WebCoin-Brieftasche",
    balance: "Kontostand",
    add: "+10 WKC",
    reset: "Zur√ºcksetzen",
    terminal: "‚èé Start",
    files: "üìÅ Dateien",
    tools: "üõ† Werkzeuge",
    copy: "üìã Kopieren",
    telegram: "üîó Telegram",
    say: "Sprich oder schreibe‚Ä¶"
  },
  pl: {
    title: "üåê WebKurierCore",
    subtitle: "Witamy w autonomicznym interfejsie WebKurier: terminal, portfel, po≈ÇƒÖczenie z Telegramem.",
    wallet: "üí∞ Portfel WebCoin",
    balance: "Saldo",
    add: "+10 WKC",
    reset: "Resetuj",
    terminal: "‚èé Start",
    files: "üìÅ Pliki",
    tools: "üõ† Narzƒôdzia",
    copy: "üìã Kopiuj",
    telegram: "üîó Telegram",
    say: "Powiedz lub napisz‚Ä¶"
  }
};

// –¢–µ–∫—É—â–∏–π —è–∑—ã–∫
let currentLang = "ru";

export function setLang(langCode) {
  if (translations[langCode]) {
    currentLang = langCode;
    localStorage.setItem("lang", langCode);
    applyTranslations();
  }
}

export function getLang() {
  return currentLang;
}

export function translate(key) {
  return translations[currentLang][key] || key;
}

export function applyTranslations() {
  const elements = document.querySelectorAll("[data-i18n]");
  elements.forEach((el) => {
    const key = el.getAttribute("data-i18n");
    const value = translate(key);
    if (el.tagName === "INPUT" || el.tagName === "TEXTAREA") {
      el.placeholder = value;
    } else {
      el.innerHTML = value;
    }
  });
}

// –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞
(function initLang() {
  const urlLang = new URLSearchParams(window.location.search).get("lang");
  const storedLang = localStorage.getItem("lang");
  const browserLang = navigator.language.slice(0, 2);

  const chosenLang =
    urlLang || storedLang || (translations[browserLang] ? browserLang : "ru");

  setLang(chosenLang);
})();